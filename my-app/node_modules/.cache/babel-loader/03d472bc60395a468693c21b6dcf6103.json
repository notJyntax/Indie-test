{"ast":null,"code":"import _slicedToArray from\"/Users/jeaney/Desktop/project/JJin/indie-test/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useContext,useEffect,useRef}from'react';import{QuizContext}from'../Helpers/Contexts';import{Questions}from'../Helpers/QuestionBank';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Quiz(){var _useContext=useContext(QuizContext),score=_useContext.score,setScore=_useContext.setScore,setGameState=_useContext.setGameState;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currQuestion=_useState2[0],setCurrQuestion=_useState2[1];var imgSrc=Questions[currQuestion].image;var handleAnswer=function handleAnswer(e){setCurrQuestion(currQuestion+1);var optionChosen=e.target.innerText;if(optionChosen===Questions[currQuestion].answer){setScore(score+1);}if(currQuestion===Questions.length-1)finishQuiz();};var finishQuiz=function finishQuiz(){setGameState(\"result\");};var interval=useRef(null);var _useState3=useState('00'),_useState4=_slicedToArray(_useState3,2),timer=_useState4[0],setTimer=_useState4[1];function getTimeRemaining(endtime){var total=Date.parse(endtime)-Date.parse(new Date());var seconds=Math.floor(total/1000%60);return{total:total,seconds:seconds};}function startTimer(deadline){var _getTimeRemaining=getTimeRemaining(deadline),total=_getTimeRemaining.total,seconds=_getTimeRemaining.seconds;if(total>=0){setTimer('0'+seconds);}else{setCurrQuestion(currQuestion+1);clearInterval(interval.current);}}function clearTimer(endtime){setTimer('05');if(interval.current)clearInterval(interval.current);var id=setInterval(function(){startTimer(endtime);},1000);interval.current=id;}function getDeadlineTime(){var deadline=new Date();deadline.setSeconds(deadline.getSeconds()+5);return deadline;}var timeBar=function timeBar(){};useEffect(function(){clearTimer(getDeadlineTime());return function(){if(interval.current)clearInterval(interval.current);};},[currQuestion]);return/*#__PURE__*/_jsxs(\"div\",{className:\"Quiz\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Timer\",children:timer}),/*#__PURE__*/_jsx(\"h1\",{className:\"QuizText\",children:Questions[currQuestion].q}),/*#__PURE__*/_jsx(\"div\",{className:\"Image\",children:/*#__PURE__*/_jsx(\"img\",{src:imgSrc,alt:Questions[currQuestion].q})}),/*#__PURE__*/_jsx(\"div\",{className:\"Options\",children:Questions[currQuestion].options.map(function(option){return/*#__PURE__*/_jsx(\"button\",{onClick:handleAnswer,children:option});})})]});}","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/indie-test/my-app/src/Components/Quiz.js"],"names":["useState","useContext","useEffect","useRef","QuizContext","Questions","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","imgSrc","image","handleAnswer","e","optionChosen","target","innerText","answer","length","finishQuiz","interval","timer","setTimer","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","startTimer","deadline","clearInterval","current","clearTimer","id","setInterval","getDeadlineTime","setSeconds","getSeconds","timeBar","q","options","map","option"],"mappings":"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","sourcesContent":["import {useState, useContext, useEffect, useRef} from 'react'\nimport {QuizContext} from '../Helpers/Contexts'\nimport {Questions} from '../Helpers/QuestionBank'\n\nexport default function Quiz(){\n  const { score, setScore, setGameState } = useContext(QuizContext)\n  const [currQuestion, setCurrQuestion] = useState(0)\n  const imgSrc = Questions[currQuestion].image\n\n  const handleAnswer = (e) => {\n    setCurrQuestion(currQuestion + 1)\n    const optionChosen = e.target.innerText\n    if(optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1)\n    }\n    if(currQuestion === Questions.length - 1) finishQuiz();\n  }\n\n  const finishQuiz = () => {\n    setGameState(\"result\")\n  }\n\n  const interval = useRef(null)\n  const [timer, setTimer] = useState('00')\n\n  function getTimeRemaining(endtime){\n    const total = Date.parse(endtime) - Date.parse(new Date())\n    const seconds = Math.floor((total/1000)%60)\n    return { total,  seconds }\n  }\n\n  function startTimer(deadline){\n    let { total,  seconds } = getTimeRemaining(deadline)\n    if(total >= 0){\n      setTimer(\n        ('0'+seconds)\n      )\n    }else{\n      setCurrQuestion(currQuestion + 1)\n      clearInterval(interval.current)\n    }\n  }\n\n  function clearTimer(endtime){\n    setTimer('05')\n    if(interval.current) clearInterval(interval.current)\n    const id = setInterval(()=>{\n      startTimer(endtime)\n    }, 1000)\n    interval.current = id\n  }\n\n  function getDeadlineTime(){\n    let deadline = new Date()\n    deadline.setSeconds(deadline.getSeconds() + 5)\n    return deadline\n  }\n\n  const timeBar = () => {\n    \n  }\n\n  useEffect(()=>{\n    clearTimer(getDeadlineTime())\n    return () => {if(interval.current) clearInterval(interval.current)}\n  }, [currQuestion])\n\n  return(\n    <div className=\"Quiz\">\n      <div className=\"Timer\">{timer}</div>\n      <h1 className=\"QuizText\">{Questions[currQuestion].q}</h1>\n      <div className=\"Image\">\n        <img src={imgSrc} alt={Questions[currQuestion].q}/>\n      </div>\n      <div className=\"Options\">\n        {Questions[currQuestion].options.map((option) => (\n          <button onClick={handleAnswer}>{option}</button>\n        ))}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}