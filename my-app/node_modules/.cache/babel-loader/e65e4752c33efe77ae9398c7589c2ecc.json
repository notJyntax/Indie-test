{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport { Questions } from '../Helpers/QuestionBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const {\n    score,\n    setScore,\n    setGameState\n  } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0); // const [optionChosen, setOptionChosen] = useState(\"\");\n\n  const handleAnswer = e => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n\n    if (optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n\n    if (currQuestion === Questions.length - 1) finishQuiz();\n    console.log(score);\n  };\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currQuestion].q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Options\",\n      children: [Questions[currQuestion].options.map((option, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"button\", {\n          onClick: handleAnswer,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this);\n      }), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"9qM9vDtrXLi7wE+KqMUyT9p9Gsk=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js"],"names":["useState","useContext","QuizContext","Questions","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","handleAnswer","e","optionChosen","target","innerText","answer","length","finishQuiz","console","log","q","options","map","option","index"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAoCN,UAAU,CAACC,WAAD,CAApD;AAEA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD,CAH4B,CAI5B;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,UAAMI,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,SAA9B;;AACA,QAAGF,YAAY,KAAKT,SAAS,CAACK,YAAD,CAAT,CAAwBO,MAA5C,EAAoD;AAClDT,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,QAAGG,YAAY,KAAKL,SAAS,CAACa,MAAV,GAAmB,CAAvC,EAA0CC,UAAU;AAEpDC,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACD,GATD;;AAWA,QAAMY,UAAU,GAAG,MAAM;AACvBV,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKJ,SAAS,CAACK,YAAD,CAAT,CAAwBY;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBACHjB,SAAS,CAACK,YAAD,CAAT,CAAwBa,OAAxB,CAAgCC,GAAhC,CAAoC,CAACC,MAAD,EAASC,KAAT,KAAmB;AACtD;AAAA;AAAQ,UAAA,OAAO,EAAEd,YAAjB;AAAA,oBAAgCa;AAAhC;AAAA;AAAA;AAAA;AAAA;AACD,OAFA,CADG,sBAIK;AAAQ,QAAA,OAAO,EAAEb,YAAjB;AAAA,kBAAgCP,SAAS,CAACK,YAAD,CAAT,CAAwBa,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJL,sBAKK;AAAQ,QAAA,OAAO,EAAEX,YAAjB;AAAA,kBAAgCP,SAAS,CAACK,YAAD,CAAT,CAAwBa,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cALL,sBAMK;AAAQ,QAAA,OAAO,EAAEX,YAAjB;AAAA,kBAAgCP,SAAS,CAACK,YAAD,CAAT,CAAwBa,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cANL,sBAOK;AAAQ,QAAA,OAAO,EAAEX,YAAjB;AAAA,kBAAgCP,SAAS,CAACK,YAAD,CAAT,CAAwBa,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnCuBjB,I;;KAAAA,I","sourcesContent":["import {useState, useContext} from 'react';\nimport {QuizContext} from '../Helpers/Contexts';\nimport {Questions} from '../Helpers/QuestionBank';\n\nexport default function Quiz(){\n  const { score, setScore, setGameState } = useContext(QuizContext);\n\n  const [currQuestion, setCurrQuestion] = useState(0);\n  // const [optionChosen, setOptionChosen] = useState(\"\");\n\n  const handleAnswer = (e) => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n    if(optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n    if(currQuestion === Questions.length - 1) finishQuiz();\n\n    console.log(score)\n  }\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }\n\n  return(\n    <div className=\"Quiz\">\n      <h1>{Questions[currQuestion].q}</h1>\n      <div className=\"Options\">\n  {Questions[currQuestion].options.map((option, index) => {\n    <button onClick={handleAnswer}>{option}</button>\n  })}\n        // <button onClick={handleAnswer}>{Questions[currQuestion].options[0]}</button>\n        // <button onClick={handleAnswer}>{Questions[currQuestion].options[1]}</button>\n        // <button onClick={handleAnswer}>{Questions[currQuestion].options[2]}</button>\n        // <button onClick={handleAnswer}>{Questions[currQuestion].options[3]}</button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}