{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport { Questions } from '../Helpers/QuestionBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    score,\n    setScore,\n    setGameState\n  } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0);\n  const imgSrc = Questions[currQuestion].image;\n  let [seconds, setSeconds] = useState(5);\n\n  const handleAnswer = e => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n\n    if (optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n\n    if (currQuestion === Questions.length - 1) finishQuiz();\n  };\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }; // function Timer(){\n  //   const countdown = setInterval(() => {\n  //       setSeconds(seconds - 1)\n  //       console.log(seconds)\n  //       if(seconds === 0) {\n  //         setCurrQuestion(currQuestion + 1)\n  //       }\n  //     }, 1000)\n  // }\n  // useEffect(\n  //   () => {\n  //   // console.log(seconds)\n  //   const countdown = setInterval(()=>{\n  //     setSeconds(seconds - 1)\n  //     console.log(\"hi\")\n  //   }, 1000)\n  //   return () => {\n  //     // console.log(setSeconds(seconds + 1) )\n  //     console.log(\"over\")\n  //     clearInterval(countdown)\n  //   }\n  // });\n\n\n  function CounterKai() {\n    _s();\n\n    const counter = useRef(0);\n    useEffect(() => {\n      const timer = setInterval(() => {\n        counter.current += 1;\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n        alert(\"<CounterKai/>:\", counter.current);\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: counter.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"QuizText\",\n        children: Questions[currQuestion].q\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Options\",\n        children: Questions[currQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAnswer,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  }\n\n  _s(CounterKai, \"kSbOU/GIyNdLKYCeEZnYjFyj34U=\");\n}\n\n_s2(Quiz, \"8B8RVRFTCDUQkdOQmNk4jDCTlVk=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js"],"names":["useState","useContext","useEffect","useRef","QuizContext","Questions","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","imgSrc","image","seconds","setSeconds","handleAnswer","e","optionChosen","target","innerText","answer","length","finishQuiz","CounterKai","counter","timer","setInterval","current","clearInterval","alert","q","options","map","option"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,EAAyCC,MAAzC,QAAsD,OAAtD;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAoCR,UAAU,CAACG,WAAD,CAApD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMY,MAAM,GAAGP,SAAS,CAACK,YAAD,CAAT,CAAwBG,KAAvC;AAEA,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BN,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,UAAMQ,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,SAA9B;;AACA,QAAGF,YAAY,KAAKb,SAAS,CAACK,YAAD,CAAT,CAAwBW,MAA5C,EAAoD;AAClDb,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,QAAGG,YAAY,KAAKL,SAAS,CAACiB,MAAV,GAAmB,CAAvC,EAA0CC,UAAU;AACrD,GAPD;;AASA,QAAMA,UAAU,GAAG,MAAM;AACvBd,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFD,CAhB4B,CAoB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASe,UAAT,GAAsB;AAAA;;AACpB,UAAMC,OAAO,GAAGtB,MAAM,CAAC,CAAD,CAAtB;AACAD,IAAAA,SAAS,CAAC,MAAM;AACd,YAAMwB,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BF,QAAAA,OAAO,CAACG,OAAR,IAAmB,CAAnB;AACD,OAFwB,EAEtB,IAFsB,CAAzB;AAGA,aAAO,MAAM;AACXC,QAAAA,aAAa,CAACH,KAAD,CAAb;AACAI,QAAAA,KAAK,CAAC,gBAAD,EAAmBL,OAAO,CAACG,OAA3B,CAAL;AACD,OAHD;AAID,KARQ,EAQN,EARM,CAAT;AAWF,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,kBAAIH,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBAA0BvB,SAAS,CAACK,YAAD,CAAT,CAAwBqB;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEnB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGP,SAAS,CAACK,YAAD,CAAT,CAAwBsB,OAAxB,CAAgCC,GAAhC,CAAqCC,MAAD,iBACnC;AAAQ,UAAA,OAAO,EAAElB,YAAjB;AAAA,oBAAgCkB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAzE6B,KA8CnBV,UA9CmB;AAyE5B;;IAzEsBlB,I;;KAAAA,I","sourcesContent":["import {useState, useContext, useEffect, useRef} from 'react';\nimport {QuizContext} from '../Helpers/Contexts';\nimport {Questions} from '../Helpers/QuestionBank';\n\nexport default function Quiz(){\n  const { score, setScore, setGameState } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0);\n  const imgSrc = Questions[currQuestion].image;\n\n  let [seconds, setSeconds] = useState(5);\n\n  const handleAnswer = (e) => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n    if(optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n    if(currQuestion === Questions.length - 1) finishQuiz();\n  }\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }\n\n  // function Timer(){\n  //   const countdown = setInterval(() => {\n  //       setSeconds(seconds - 1)\n  //       console.log(seconds)\n  //       if(seconds === 0) {\n  //         setCurrQuestion(currQuestion + 1)\n  //       }\n  //     }, 1000)\n  // }\n\n  // useEffect(\n  //   () => {\n  //   // console.log(seconds)\n\n  //   const countdown = setInterval(()=>{\n  //     setSeconds(seconds - 1)\n  //     console.log(\"hi\")\n  //   }, 1000)\n\n  //   return () => {\n  //     // console.log(setSeconds(seconds + 1) )\n  //     console.log(\"over\")\n  //     clearInterval(countdown)\n  //   }\n  // });\n\n  function CounterKai() {\n    const counter = useRef(0);\n    useEffect(() => {\n      const timer = setInterval(() => {\n        counter.current += 1;\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n        alert(\"<CounterKai/>:\", counter.current);\n      };\n    }, []);\n\n\n  return(\n    <div className=\"Quiz\">\n      <p>{counter.current}</p>\n      <h1 className=\"QuizText\">{Questions[currQuestion].q}</h1>\n      <div className=\"Image\">\n        <img src={imgSrc}></img>\n      </div>\n      <div className=\"Options\">\n        {Questions[currQuestion].options.map((option) => (\n          <button onClick={handleAnswer}>{option}</button>\n        ))}\n      </div>\n    </div>\n  )\n}}\n"]},"metadata":{},"sourceType":"module"}