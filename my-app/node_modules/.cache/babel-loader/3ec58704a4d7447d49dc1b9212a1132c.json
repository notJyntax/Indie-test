{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport { Questions } from '../Helpers/QuestionBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    score,\n    setScore,\n    setGameState\n  } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0);\n  const imgSrc = Questions[currQuestion].image; // const [seconds, setSeconds] = useState(5);\n  // const interval = useRef();\n\n  const handleAnswer = e => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n\n    if (optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n\n    if (currQuestion === Questions.length - 1) finishQuiz();\n  };\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  };\n\n  function Timer() {\n    _s();\n\n    const [seconds, setSeconds] = useState(5);\n    const countdown = setInterval(() => {\n      setSeconds(seconds - 1);\n      console.log(seconds);\n\n      if (seconds === 0) {\n        setCurrQuestion(currQuestion + 1);\n      }\n    }, 1000);\n  } // useEffect(\n  //   () => {\n  //   setSeconds(5)\n  //     const Timer = setInterval(()=>{\n  //       setSeconds(parseInt(seconds) - 1)\n  //       if(parseInt(seconds) === 0){\n  //       console.log(\"zero\")\n  //       clearInterval(Timer)\n  //     }\n  //   }, 1000)\n  // }, [currQuestion]);\n\n\n  _s(Timer, \"6UadG9qUc40tyUWx6oOn1wDAneE=\");\n\n  useEffect(Timer, [currQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: seconds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"QuizText\",\n      children: Questions[currQuestion].q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Options\",\n      children: Questions[currQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Quiz, \"lltZ2PidIoN7HP58FtbrkNZjSRc=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js"],"names":["useState","useContext","useEffect","QuizContext","Questions","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","imgSrc","image","handleAnswer","e","optionChosen","target","innerText","answer","length","finishQuiz","Timer","seconds","setSeconds","countdown","setInterval","console","log","q","options","map","option"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA8C,OAA9C;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAoCP,UAAU,CAACE,WAAD,CAApD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMW,MAAM,GAAGP,SAAS,CAACK,YAAD,CAAT,CAAwBG,KAAvC,CAH4B,CAK5B;AACA;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BJ,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,UAAMM,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,SAA9B;;AACA,QAAGF,YAAY,KAAKX,SAAS,CAACK,YAAD,CAAT,CAAwBS,MAA5C,EAAoD;AAClDX,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,QAAGG,YAAY,KAAKL,SAAS,CAACe,MAAV,GAAmB,CAAvC,EAA0CC,UAAU;AACrD,GAPD;;AASA,QAAMA,UAAU,GAAG,MAAM;AACvBZ,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFD;;AAIA,WAASa,KAAT,GAAgB;AAAA;;AAChB,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,CAAD,CAAtC;AACE,UAAMwB,SAAS,GAAGC,WAAW,CAAC,MAAM;AAChCF,MAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AACA,UAAGA,OAAO,KAAK,CAAf,EAAkB;AAChBZ,QAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD;AACF,KAN0B,EAMxB,IANwB,CAA7B;AAOD,GA/B2B,CAiC5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AA5C4B,KAsBnBY,KAtBmB;;AA8C5BnB,EAAAA,SAAS,CAACmB,KAAD,EAAQ,CAACZ,YAAD,CAAR,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAIa;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BlB,SAAS,CAACK,YAAD,CAAT,CAAwBmB;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEjB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGP,SAAS,CAACK,YAAD,CAAT,CAAwBoB,OAAxB,CAAgCC,GAAhC,CAAqCC,MAAD,iBACnC;AAAQ,QAAA,OAAO,EAAElB,YAAjB;AAAA,kBAAgCkB;AAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;IA9DuB1B,I;;KAAAA,I","sourcesContent":["import {useState, useContext, useEffect} from 'react';\nimport {QuizContext} from '../Helpers/Contexts';\nimport {Questions} from '../Helpers/QuestionBank';\n\nexport default function Quiz(){\n  const { score, setScore, setGameState } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0);\n  const imgSrc = Questions[currQuestion].image;\n\n  // const [seconds, setSeconds] = useState(5);\n  // const interval = useRef();\n\n\n  const handleAnswer = (e) => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n    if(optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n    if(currQuestion === Questions.length - 1) finishQuiz();\n  }\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }\n\n  function Timer(){\n  const [seconds, setSeconds] = useState(5);\n    const countdown = setInterval(() => {\n        setSeconds(seconds - 1)\n        console.log(seconds)\n        if(seconds === 0) {\n          setCurrQuestion(currQuestion + 1)\n        }\n      }, 1000)\n  }\n\n  // useEffect(\n  //   () => {\n  //   setSeconds(5)\n  //     const Timer = setInterval(()=>{\n  //       setSeconds(parseInt(seconds) - 1)\n    \n  //       if(parseInt(seconds) === 0){\n  //       console.log(\"zero\")\n  //       clearInterval(Timer)\n  //     }\n  //   }, 1000)\n  // }, [currQuestion]);\n\n  useEffect(Timer, [currQuestion])\n\n  return(\n    <div className=\"Quiz\">\n      <p>{seconds}</p>\n      <h1 className=\"QuizText\">{Questions[currQuestion].q}</h1>\n      <div className=\"Image\">\n        <img src={imgSrc}></img>\n      </div>\n      <div className=\"Options\">\n        {Questions[currQuestion].options.map((option) => (\n          <button onClick={handleAnswer}>{option}</button>\n        ))}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}