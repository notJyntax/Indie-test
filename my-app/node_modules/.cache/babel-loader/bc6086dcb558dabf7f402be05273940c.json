{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport { Questions } from '../Helpers/QuestionBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const {\n    score,\n    setScore,\n    setGameState\n  } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0); // const [optionChosen, setOptionChosen] = useState(\"\");\n\n  const [timer, setTimer] = useState(\"00\");\n  let interval = useRef();\n\n  const startTimer = () => {\n    const countdownTime = new Date().getTime();\n    interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = countdownTime - now;\n\n      if (distance < 0) {\n        clearInterval(interval.current);\n      }\n    }, 1000);\n  };\n\n  useEffect(() => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current);\n    };\n  });\n\n  const handleAnswer = () => {\n    setCurrQuestion(currQuestion + 1);\n    if (currQuestion === Questions.length - 1) finishQuiz();\n  };\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currQuestion].q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: Questions[currQuestion].options[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"+S1wcHORaCqg2y/ObLHkJEwAFys=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js"],"names":["useState","useContext","useEffect","useRef","QuizContext","Questions","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","timer","setTimer","interval","startTimer","countdownTime","Date","getTime","setInterval","now","distance","clearInterval","current","handleAnswer","length","finishQuiz","q","options"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,EAAyCC,MAAzC,QAAsD,OAAtD;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAoCR,UAAU,CAACG,WAAD,CAApD;AAEA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD,CAH4B,CAI5B;;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AAEA,MAAIc,QAAQ,GAAGX,MAAM,EAArB;;AAEA,QAAMY,UAAU,GAAG,MAAM;AACrB,UAAMC,aAAa,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAtB;AAEAJ,IAAAA,QAAQ,GAAGK,WAAW,CAAE,MAAM;AAC5B,YAAMC,GAAG,GAAG,IAAIH,IAAJ,GAAWC,OAAX,EAAZ;AACA,YAAMG,QAAQ,GAAGL,aAAa,GAAGI,GAAjC;;AAEA,UAAGC,QAAQ,GAAG,CAAd,EAAiB;AACfC,QAAAA,aAAa,CAACR,QAAQ,CAACS,OAAV,CAAb;AACD;AACF,KAPqB,EAOnB,IAPmB,CAAtB;AAQH,GAXD;;AAaArB,EAAAA,SAAS,CAAE,MAAM;AACfa,IAAAA,UAAU;AACV,WAAO,MAAM;AACXO,MAAAA,aAAa,CAACR,QAAQ,CAACS,OAAV,CAAb;AACD,KAFD;AAGD,GALQ,CAAT;;AAOA,QAAMC,YAAY,GAAG,MAAM;AACzBb,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AAEA,QAAGA,YAAY,KAAKL,SAAS,CAACoB,MAAV,GAAmB,CAAvC,EAA0CC,UAAU;AACrD,GAJD;;AAMA,QAAMA,UAAU,GAAG,MAAM;AACvBjB,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKJ,SAAS,CAACK,YAAD,CAAT,CAAwBiB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEH,YAAjB;AAAA,kBAAgCnB,SAAS,CAACK,YAAD,CAAT,CAAwBkB,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEJ,YAAjB;AAAA,kBAAgCnB,SAAS,CAACK,YAAD,CAAT,CAAwBkB,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEJ,YAAjB;AAAA,kBAAgCnB,SAAS,CAACK,YAAD,CAAT,CAAwBkB,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAEJ,YAAjB;AAAA,kBAAgCnB,SAAS,CAACK,YAAD,CAAT,CAAwBkB,OAAxB,CAAgC,CAAhC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnDuBtB,I;;KAAAA,I","sourcesContent":["import {useState, useContext, useEffect, useRef} from 'react';\nimport {QuizContext} from '../Helpers/Contexts';\nimport {Questions} from '../Helpers/QuestionBank';\n\nexport default function Quiz(){\n  const { score, setScore, setGameState } = useContext(QuizContext);\n\n  const [currQuestion, setCurrQuestion] = useState(0);\n  // const [optionChosen, setOptionChosen] = useState(\"\");\n\n  const [timer, setTimer] = useState(\"00\");\n\n  let interval = useRef();\n\n  const startTimer = () => {\n      const countdownTime = new Date().getTime();\n\n      interval = setInterval( () => {\n        const now = new Date().getTime();\n        const distance = countdownTime - now;\n\n        if(distance < 0) {\n          clearInterval(interval.current);\n        }\n      }, 1000);\n  }\n\n  useEffect( () => {\n    startTimer();\n    return () => {\n      clearInterval(interval.current)\n    }\n  })\n\n  const handleAnswer = () => {\n    setCurrQuestion(currQuestion + 1);\n\n    if(currQuestion === Questions.length - 1) finishQuiz();\n  }\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }\n\n  return(\n    <div className=\"Quiz\">\n      <h1>{Questions[currQuestion].q}</h1>\n      <div className=\"Options\">\n        <button onClick={handleAnswer}>{Questions[currQuestion].options[0]}</button>\n        <button onClick={handleAnswer}>{Questions[currQuestion].options[1]}</button>\n        <button onClick={handleAnswer}>{Questions[currQuestion].options[2]}</button>\n        <button onClick={handleAnswer}>{Questions[currQuestion].options[3]}</button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}