{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport { Questions } from '../Helpers/QuestionBank';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n\n  const {\n    score,\n    setScore,\n    setGameState\n  } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0);\n  const imgSrc = Questions[currQuestion].image;\n  const [seconds, setSeconds] = useState(5);\n  const interval = useRef();\n\n  const handleAnswer = e => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n\n    if (optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n\n    if (currQuestion === Questions.length - 1) finishQuiz();\n  };\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }; // function Timer(){\n  //   const countdown = setInterval(() => {\n  //       setSeconds(seconds - 1)\n  //       console.log(seconds)\n  //       if(seconds === 0) {\n  //         setCurrQuestion(currQuestion + 1)\n  //       }\n  //     }, 1000)\n  // }\n  // useEffect(\n  //   () => {\n  //   interval.current = setInterval(()=>{\n  //     setSeconds(seconds - 1)\n  //   }, 1000)\n  //   return () => {\n  //     clearInterval(interval.current)\n  //   }\n  // }, [seconds]);\n\n\n  const [value, setValue] = useState(1);\n  const [isIncrease, setIsIncrease] = useState(false);\n  useEffect(() => {\n    function tick() {\n      return setTimeOut(() => setValue(value + 1), 1000);\n    }\n\n    if (!isIncrease) return undefined;\n    tick();\n    return () => clearTimeOut(tick);\n  }, [value, isIncrease]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"QuizText\",\n      children: Questions[currQuestion].q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Options\",\n      children: Questions[currQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnswer,\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Quiz, \"BQoniktFLOOpZqw/F7Wv+CaF8+U=\");\n\n_c = Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/my-app/src/Components/Quiz.js"],"names":["useState","useContext","useEffect","useRef","QuizContext","Questions","Quiz","score","setScore","setGameState","currQuestion","setCurrQuestion","imgSrc","image","seconds","setSeconds","interval","handleAnswer","e","optionChosen","target","innerText","answer","length","finishQuiz","value","setValue","isIncrease","setIsIncrease","tick","setTimeOut","undefined","clearTimeOut","q","options","map","option"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,EAA8BC,SAA9B,EAAyCC,MAAzC,QAAsD,OAAtD;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAoCR,UAAU,CAACG,WAAD,CAApD;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMY,MAAM,GAAGP,SAAS,CAACK,YAAD,CAAT,CAAwBG,KAAvC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMgB,QAAQ,GAAGb,MAAM,EAAvB;;AAGA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AAC1BP,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACA,UAAMS,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,SAA9B;;AACA,QAAGF,YAAY,KAAKd,SAAS,CAACK,YAAD,CAAT,CAAwBY,MAA5C,EAAoD;AAClDd,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,QAAGG,YAAY,KAAKL,SAAS,CAACkB,MAAV,GAAmB,CAAvC,EAA0CC,UAAU;AACrD,GAPD;;AASA,QAAMA,UAAU,GAAG,MAAM;AACvBf,IAAAA,YAAY,CAAC,QAAD,CAAZ;AACD,GAFD,CAlB4B,CAsB5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,QAAM,CAACgB,KAAD,EAAOC,QAAP,IAAmB1B,QAAQ,CAAC,CAAD,CAAjC;AACF,QAAM,CAAC2B,UAAD,EAAYC,aAAZ,IAA6B5B,QAAQ,CAAC,KAAD,CAA3C;AACAE,EAAAA,SAAS,CAAC,MAAI;AACZ,aAAS2B,IAAT,GAAe;AACZ,aAAOC,UAAU,CAAC,MAAIJ,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAb,EAAuB,IAAvB,CAAjB;AACA;;AACH,QAAG,CAACE,UAAJ,EAAgB,OAAOI,SAAP;AAChBF,IAAAA,IAAI;AACJ,WAAO,MAAIG,YAAY,CAACH,IAAD,CAAvB;AACD,GAPQ,EAOP,CAACJ,KAAD,EAAOE,UAAP,CAPO,CAAT;AAUE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BpB,SAAS,CAACK,YAAD,CAAT,CAAwBuB;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAErB;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGP,SAAS,CAACK,YAAD,CAAT,CAAwBwB,OAAxB,CAAgCC,GAAhC,CAAqCC,MAAD,iBACnC;AAAQ,QAAA,OAAO,EAAEnB,YAAjB;AAAA,kBAAgCmB;AAAhC;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GArEuB9B,I;;KAAAA,I","sourcesContent":["import {useState, useContext, useEffect, useRef} from 'react';\nimport {QuizContext} from '../Helpers/Contexts';\nimport {Questions} from '../Helpers/QuestionBank';\n\nexport default function Quiz(){\n  const { score, setScore, setGameState } = useContext(QuizContext);\n  const [currQuestion, setCurrQuestion] = useState(0);\n  const imgSrc = Questions[currQuestion].image;\n\n  const [seconds, setSeconds] = useState(5);\n  const interval = useRef();\n\n\n  const handleAnswer = (e) => {\n    setCurrQuestion(currQuestion + 1);\n    const optionChosen = e.target.innerText;\n    if(optionChosen === Questions[currQuestion].answer) {\n      setScore(score + 1);\n    }\n    if(currQuestion === Questions.length - 1) finishQuiz();\n  }\n\n  const finishQuiz = () => {\n    setGameState(\"result\");\n  }\n\n  // function Timer(){\n  //   const countdown = setInterval(() => {\n  //       setSeconds(seconds - 1)\n  //       console.log(seconds)\n  //       if(seconds === 0) {\n  //         setCurrQuestion(currQuestion + 1)\n  //       }\n  //     }, 1000)\n  // }\n\n  // useEffect(\n  //   () => {\n  //   interval.current = setInterval(()=>{\n  //     setSeconds(seconds - 1)\n  //   }, 1000)\n\n  //   return () => {\n  //     clearInterval(interval.current)\n  //   }\n  // }, [seconds]);\n\n  const [value,setValue] = useState(1);\nconst [isIncrease,setIsIncrease] = useState(false);\nuseEffect(()=>{\n  function tick(){\n    \treturn setTimeOut(()=>setValue(value+1),1000);\n    }\n  if(!isIncrease) return undefined;\n  tick();\n  return ()=>clearTimeOut(tick);\n},[value,isIncrease])\n\n\n  return(\n    <div className=\"Quiz\">\n      <p>{value}</p>\n      <h1 className=\"QuizText\">{Questions[currQuestion].q}</h1>\n      <div className=\"Image\">\n        <img src={imgSrc}></img>\n      </div>\n      <div className=\"Options\">\n        {Questions[currQuestion].options.map((option) => (\n          <button onClick={handleAnswer}>{option}</button>\n        ))}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}