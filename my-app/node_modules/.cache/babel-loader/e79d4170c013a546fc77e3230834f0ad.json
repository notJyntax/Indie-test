{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/indie-test/my-app/src/Components/Result.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { QuizContext } from '../Helpers/Contexts';\nimport ClipboardCopy from './ClipboardCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Result() {\n  _s();\n\n  const {\n    score\n  } = useContext(QuizContext);\n  const [result, setResult] = useState({\n    name: '',\n    text: ''\n  });\n  useEffect(() => {\n    if (score < 10) {\n      setResult({\n        name: '톱백귀',\n        text: '톱100은 항상 전체 재생한 덕에 메이져로 올라온 인디음악들은 나름 다 꿰차고 있군요 당신은 톱백귀 입니다.'\n      });\n    } else if (score > 9 && score < 14) {\n      setResult({\n        name: '막귀',\n        text: '그다지 내 취향이 아니라서  안들었거나 관심없던 이들만 문제로 나왔나요? 당신은 막귀입니다.'\n      });\n    } else if (score > 13 && score < 18) {\n      setResult({\n        name: '마귀',\n        text: '나름 인디 카테고리만 찾아서 들었던 지라 , 노래랑 이름을 들으면 알지만 이렇게까지는 궁금하지않았던 당신은 마귀입니다. '\n      });\n    } else if (score > 17) {\n      setResult({\n        name: '악귀',\n        text: '테스트에 언급된 아티스트는 물론 속사정까지 꿰차고 있으며, 더많이 명곡과 가수가 있는데 하면서 드릉드릉한가요? 찐 악귀입니다.'\n      });\n    }\n  }, [score]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Result\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ResultBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: result.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ImageBox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/main.jpeg\",\n        alt: \"\\uACB0\\uACFC \\uC774\\uBBF8\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"RestartBtn\",\n      onClick: () => {\n        window.location.reload();\n      },\n      children: \"restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClipboardCopy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Result, \"UhhEm32TMReXx/Yy7WZNeODq0Rc=\");\n\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/indie-test/my-app/src/Components/Result.js"],"names":["useState","useContext","useEffect","QuizContext","ClipboardCopy","Result","score","result","setResult","name","text","window","location","reload"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAYL,UAAU,CAACE,WAAD,CAA5B;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,CAApC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGI,KAAK,GAAG,EAAX,EAAe;AACbE,MAAAA,SAAS,CAAC;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,IAAI,EAAC;AAApB,OAAD,CAAT;AACD,KAFD,MAEM,IAAGJ,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAxB,EAA4B;AAChCE,MAAAA,SAAS,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAC;AAAnB,OAAD,CAAT;AACD,KAFK,MAEA,IAAGJ,KAAK,GAAG,EAAR,IAAcA,KAAK,GAAG,EAAzB,EAA6B;AACjCE,MAAAA,SAAS,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAC;AAAnB,OAAD,CAAT;AACD,KAFK,MAEA,IAAGJ,KAAK,GAAG,EAAX,EAAc;AAClBE,MAAAA,SAAS,CAAC;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAC;AAAnB,OAAD,CAAT;AACD;AACF,GAVQ,EAUN,CAACJ,KAAD,CAVM,CAAT;AAYE,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,kBAAKC,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIF,MAAM,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,GAAG,EAAC,oBAAT;AAA8B,QAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAQE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,MAAI;AAACC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAAyB,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7BuBR,M;;KAAAA,M","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport { QuizContext } from '../Helpers/Contexts'\nimport ClipboardCopy from './ClipboardCopy'\n\nexport default function Result(){\nconst { score } = useContext(QuizContext)\nconst [result, setResult] = useState({ name: '', text: '' })\n\nuseEffect(() => {\n  if(score < 10) {\n    setResult({ name: '톱백귀', text:'톱100은 항상 전체 재생한 덕에 메이져로 올라온 인디음악들은 나름 다 꿰차고 있군요 당신은 톱백귀 입니다.' })\n  }else if(score > 9 && score < 14) {\n    setResult({ name: '막귀', text:'그다지 내 취향이 아니라서  안들었거나 관심없던 이들만 문제로 나왔나요? 당신은 막귀입니다.' })\n  }else if(score > 13 && score < 18) {\n    setResult({ name: '마귀', text:'나름 인디 카테고리만 찾아서 들었던 지라 , 노래랑 이름을 들으면 알지만 이렇게까지는 궁금하지않았던 당신은 마귀입니다. ' })\n  }else if(score > 17){\n    setResult({ name: '악귀', text:'테스트에 언급된 아티스트는 물론 속사정까지 꿰차고 있으며, 더많이 명곡과 가수가 있는데 하면서 드릉드릉한가요? 찐 악귀입니다.' })\n  }\n}, [score])\n\n  return(\n    <div className=\"Result\">\n      <div className=\"ResultBox\">\n        <h3>{result.name}</h3>\n        <p>{result.text}</p>\n      </div>\n      <div className=\"ImageBox\">\n        <img src=\"./images/main.jpeg\" alt=\"결과 이미지\" />\n      </div>\n      <button className=\"RestartBtn\" onClick={()=>{window.location.reload()}}>restart</button>\n      <ClipboardCopy />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}