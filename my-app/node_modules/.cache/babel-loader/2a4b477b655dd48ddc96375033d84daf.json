{"ast":null,"code":"var _jsxFileName = \"/Users/jeaney/Desktop/project/JJin/indie-test/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Main from './Components/Main';\nimport Quiz from './Components/Quiz2';\nimport Result from './Components/Result';\nimport { QuizContext } from './Helpers/Contexts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [gameState, setGameState] = useState(\"main\");\n  const [score, setScore] = useState(0);\n  const intervalRef = useRef(null);\n  const [timer, setTimer] = useState('00:00:00');\n\n  function getTimeRemaining(endtime) {\n    const total = Date.parse(endtime) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 * 60 * 60 % 24);\n    const days = Math.floor(total / (1000 * 60 * 60 * 24));\n    return total, days, hours, minutes, seconds;\n  }\n\n  function startTimer(deadline) {\n    let {\n      total,\n      days,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(deadline);\n\n    if (total >= 0) {\n      setTimer((hours > 9 ? hours : '0' + hours) + ':' + (minutes > 9 ? minutes : '0' + minutes) + ':' + (seconds > 9 ? seconds : '0' + seconds));\n    } else {\n      clearInterval(intervalRef.current);\n    }\n  }\n\n  function clearTimer(endtime) {\n    setTimer('00:00:10');\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    const id = setInterval(() => {\n      startTimer(endtime);\n    }, 1000);\n    intervalRef.current = id;\n  }\n\n  function getDeadlineTime() {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 10);\n    return deadline;\n  }\n\n  useEffect(() => {\n    clearTimer(getDeadlineTime());\n    return () => {\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  function onClickResetBtn() {\n    if (intervalRef.current) clearInterval(intervalRef.current);\n    clearTimer(getDeadlineTime());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickResetBtn,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizContext.Provider, {\n      value: {\n        gameState,\n        setGameState,\n        score,\n        setScore\n      },\n      children: [gameState === \"main\" && /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this), gameState === \"quiz\" && /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }, this), gameState === \"result\" && /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QtKllPaxybqD1/VtaaIRl2jpsTs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jeaney/Desktop/project/JJin/indie-test/my-app/src/App.js"],"names":["useState","useEffect","useRef","Main","Quiz","Result","QuizContext","App","gameState","setGameState","score","setScore","intervalRef","timer","setTimer","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","startTimer","deadline","clearInterval","current","clearTimer","id","setInterval","getDeadlineTime","setSeconds","getSeconds","onClickResetBtn"],"mappings":"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","sourcesContent":["import {useState, useEffect, useRef} from 'react';\nimport './App.css';\nimport Main from './Components/Main';\nimport Quiz from './Components/Quiz2';\nimport Result from './Components/Result';\n\nimport { QuizContext } from './Helpers/Contexts';\n\nfunction App() {\n  const [gameState, setGameState] = useState(\"main\");\n  const [score, setScore] = useState(0);\n\n  const intervalRef = useRef(null)\n  const [timer, setTimer] = useState('00:00:00')\n\n  function getTimeRemaining(endtime){\n    const total = Date.parse(endtime) - Date.parse(new Date())\n    const seconds = Math.floor( (total/1000)%60)\n    const minutes = Math.floor( (total/1000/60)%60)\n    const hours = Math.floor( (total/1000*60*60)%24)\n    const days= Math.floor( total/(1000*60*60*24))\n    return(\n      total, days, hours, minutes, seconds\n    )\n  }\n\n  function startTimer(deadline){\n    let { total, days, hours, minutes, seconds } = getTimeRemaining(deadline)\n    if(total >= 0){\n      setTimer(\n        (hours > 9 ? hours : '0'+hours) + ':' +\n        (minutes > 9 ? minutes : '0'+minutes) + ':' +\n        (seconds > 9 ? seconds : '0'+seconds)\n      )\n    }else{\n      clearInterval(intervalRef.current)\n    }\n  }\n\n  function clearTimer(endtime){\n    setTimer('00:00:10')\n    if(intervalRef.current) clearInterval(intervalRef.current)\n    const id = setInterval(()=>{\n      startTimer(endtime)\n    }, 1000)\n    intervalRef.current = id\n  }\n\n  function getDeadlineTime(){\n    let deadline = new Date()\n    deadline.setSeconds(deadline.getSeconds() + 10)\n    return deadline\n  }\n\n  useEffect(()=>{\n    clearTimer(getDeadlineTime())\n    return() => {if(intervalRef.current) clearInterval(intervalRef.current)}\n  }, [])\n\n  function onClickResetBtn(){\n    if(intervalRef.current) clearInterval(intervalRef.current)\n    clearTimer(getDeadlineTime())\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <p>{timer}</p>\n      <button onClick={onClickResetBtn}>Reset</button>\n    <QuizContext.Provider value={{gameState, setGameState, score, setScore}}>\n    {gameState === \"main\" && <Main />}\n    {gameState === \"quiz\" && <Quiz />}\n    {gameState === \"result\" && <Result />}\n    </QuizContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}